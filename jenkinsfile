

pipeline{
    agent any
    environment 
    {
		DOCKERHUB_CREDENTIALS=credentials('docker_token')
    }
    stages{
        stage('start')
        {
            steps
            {
                sh 'echo "welcome to jenkins "'
              //  sh 'echo "how r u"'
            }
        }
         stage('download')
        {
            steps
            {
                git 'https://github.com/m-chiranjeevi1/spring-boot-demo-docker1.git'
            }
        }
        stage('build')
        {
            steps
            {
               sh 'mvn package'
            }
        }
        stage('docker_Build')
        {

	    steps
            {
	       sh 'docker build -t 8466033508/spring .'
	    }
	 }
        stage('docker_Login') 
        {

	    steps 
            {
		sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
	    }
	}

	stage('docker_Push') 
        {
	    steps 
            {
		sh 'docker push 8466033508/spring'
	    }
	}
     /*
       post 
        {
	    always 
            {
		sh 'docker logout'
	     }
	}
     
    
        stage('nexus artfactory uploader')
        {
            steps
            {
              nexusArtifactUploader artifacts: [
                [
              artifactId: 'spring', 
              classifier: '', 
              file: '/home/ec2-user/.jenkins/workspace/pipeline/target/spring-boot.jar', 
              type: 'jar'
                ]
              ], 
              credentialsId: 'e2ca2781-eb79-4949-8ce7-a8a505c1e87c', 
              groupId: 'com.javainterviewpoint', 
              nexusUrl: '172.31.43.185:8081', 
              nexusVersion: 'nexus3', 
              protocol: 'http', 
              repository: 'nexus-repo', 
              version: 'boot'
            }
        }
     
       stage('deploy')
        {
            steps
            {
                sh 'scp /home/ec2-user/.jenkins/workspace/pipeline2/target/spring-boot.jar ubuntu@172.31.9.214:/var/lib/spring-boot.jar'
            }
        }
   */    
   }
}
